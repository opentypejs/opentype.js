{
  "name": "opentype.js",
  "description": "OpenType font parser",
  "author": {
    "name": "Frederik De Bleser",
    "email": "frederik@debleser.be"
  },
  "keywords": [
    "graphics",
    "fonts",
    "font",
    "opentype",
    "otf",
    "ttf",
    "woff",
    "type"
  ],
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/opentypejs/opentype.js.git"
  },
  "main": "./dist/opentype.js",
  "browser": "./dist/opentype.js",
  "module": "./dist/opentype.module.js",
  "scripts": {
    "build": "npm run b:umd && npm run b:esm",
    "dist": " npm run d:umd && npm run d:esm",
    "test": "npm run build && npm run dist && mocha --require reify --recursive && npm run lint",
    "lint": "eslint src",
    "lint-fix": "eslint src --fix",
    "start": "esbuild --bundle src/opentype.js --outdir=dist --external:fs --target=es2018 --format=iife --out-extension:.js=.js      --global-name=opentype --footer:js=\"(function (root, factory) {\nif (typeof define === 'function' && define.amd)define(factory);\nelse if (typeof module === 'object' && module.exports)module.exports = factory();\nelse root.opentype = factory();\n}(typeof self !== 'undefined' ? self : this, () => ({...opentype,'default':opentype})));\" --watch --servedir=. --footer:js=\"new EventSource('/esbuild').addEventListener('change', () => location.reload())\"",
    "b:umd": "esbuild --bundle src/opentype.js --outdir=dist --external:fs --target=es2018 --format=iife --out-extension:.js=.js      --global-name=opentype --footer:js=\"(function (root, factory) {\nif (typeof define === 'function' && define.amd)define(factory);\nelse if (typeof module === 'object' && module.exports)module.exports = factory();\nelse root.opentype = factory();\n}(typeof self !== 'undefined' ? self : this, () => ({...opentype,'default':opentype})));\"",
    "d:umd": "esbuild --bundle src/opentype.js --outdir=dist --external:fs --target=es2018 --format=iife --out-extension:.js=.min.js  --global-name=opentype --footer:js=\"(function (root, factory) {\nif (typeof define === 'function' && define.amd)define(factory);\nelse if (typeof module === 'object' && module.exports)module.exports = factory();\nelse root.opentype = factory();\n}(typeof self !== 'undefined' ? self : this, () => ({...opentype,'default':opentype})));\" --minify --sourcemap",
    "b:esm": "esbuild --bundle src/opentype.js --outdir=dist --external:fs --target=es2018 --format=esm  --out-extension:.js=.module.js",
    "d:esm": "esbuild --bundle src/opentype.js --outdir=dist --external:fs --target=es2018 --format=esm  --out-extension:.js=.module.min.js --minify --sourcemap"
  },
  "devDependencies": {
    "esbuild": "^0.17.7",
    "eslint": "^8.34.0",
    "mocha": "^10.2.0",
    "reify": "^0.20.12"
  },
  "bin": {
    "ot": "./bin/ot"
  },
  "files": [
    "dist"
  ],
  "sideEffects": false,
  "eslintConfig": {
    "env": {
      "browser": true,
      "es2021": true,
      "node": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
      "ecmaVersion": 2018,
      "sourceType": "module"
    },
    "rules": {
      "indent": [
        "error",
        4,
        {
          "SwitchCase": 1
        }
      ],
      "linebreak-style": [
        "error",
        "unix"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "semi": [
        "error",
        "always"
      ]
    }
  }
}
